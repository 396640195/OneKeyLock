apply plugin: 'android'
android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }
        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    dependencies {
        compile fileTree(dir: 'libraries', include: '*.jar')
    }

    repositories {
        mavenCentral()
        maven {
            url "http://repo.yypm.com:8181/nexus/content/repositories/releases"
        }
    }
    signingConfigs {
        debug {
            storeFile file(".${File.separator}config${File.separator}chenzhen.keystore")
            keyAlias 'chenzhen'
            keyPassword '162534'
            storePassword '162534'
        }

        release {
            storeFile file(".${File.separator}config${File.separator}chenzhen.keystore")
            storePassword "162534"
            keyAlias "chenzhen"
            keyPassword "162534"
        }
    }
    defaultConfig {
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testHandleProfiling true
        testFunctionalTest true
        // dex突破65535的限制
        multiDexEnabled true
        minSdkVersion 14
        targetSdkVersion 21
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFile 'proguard.cfg'
            debuggable true
            renderscriptDebuggable true
            zipAlignEnabled true
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 移除无用的resource文件
            shrinkResources true

        }
        debug {
            debuggable true
            renderscriptDebuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
    }

    flavorDimensions "package", "channel"
    productFlavors {

        file(".${File.separator}config${File.separator}package.list").eachLine {
            packageName ->
                if (!packageName.startsWith("#") && !packageName.trim().equals("")) {
                    println "line: ${packageName}"
                    String[] config = packageName.split("\\|")
                    def configedPackageName = config[0]
                    def configedAppName = config[1]
                    "$configedPackageName" {
                        flavorDimension "package"
                        applicationId configedPackageName
                        manifestPlaceholders = [AUTHORITIES:configedPackageName, APPLICATION_NAME:configedAppName]
                        sourceSets{
                            "${configedPackageName}"{
                                setRoot(".${File.separator}config${File.separator}replace${File.separator}${configedPackageName}")
                            }
                        }
                    }
                }
        }
        file(".${File.separator}config${File.separator}markets.list").eachLine {
            channel ->
                if (!channel.trim().equals("")) {
                    "$channel" {
                        flavorDimension "channel"
                        manifestPlaceholders =[CHANNEL_NAME:channel]
                    }
                }
        }
    }

}